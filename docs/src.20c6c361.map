{"version":3,"sources":["index.js"],"names":["hideEmpty","webIds","currentPath","projectSchema","state","models","wcol","wcolif","wcolmin","ocdx","ocd","Client","dataUrl","schemaUrl","window","location","hostname","getCounts","i","root","types","_","findKey","id","ico","out","keys","forEach","t","tc","length","count","push","map","o","m","style","class","alt","title","expandSubschema","val","expanded","indexOf","splice","log","progressError","msgs","path","weight","text","undefined","makePath","checkWeightIf","schema","calculateProgress","obj","w","type","ret","test","code","eval","items","arr","k","concat","prog","sum","properties","weights","progress","pd","p","Object","values","getLengthInBytes","str","b","match","githubIssueLink","value","encodeURI","dataItem","body","setPath","makeFooter","format","reduce","v","unsetPath","resolveWebId","href","url","replace","target","processItem","_size","JSON","stringify","pickBy","key","_logo","_logo_full","_counts","_progress","ic","c","ci","images","logo_square","data","logo_full","getType","fn","OCString","OCArray","OCNumber","OCBoolean","OCObject","zeroValue","cpath","media","binaryEncoding","src","moment","fromNow","slice","blockchain","lnk","platform","wrapper","patternProperties","$id","res","schemas","ledgers","assets","exchanges","clients","networks","markets","subschemaId","content","pid","oncreate","route","link","name","toFixed","max","onclick","withAttr","pdata","events","onmouseenter","onmouseleave","githubLink","Layout","all","query","request","then","redraw","vnode","display","children","originalData","projectData","sortBy","sortReverse","listModel","listModelAttr","modelData","defaultList","loadListData","model","find","collection","attrs","error","clone","ProjectList","runSort","reverse","updateSort","plural","placeholder","toLowerCase","oninput","searchList","filter","Boolean","RegExp","mid","detailLink","pi","split","par","dataView","dataObject","detailId","loadItem","subid","join","get","Project","switchSource","pathx","mod","trust","hljs","highlight","schemapath","jmespath","search","document","getElementById","render"],"mappings":";AAwxBA,IAAA,eAAA,WAAA,OAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,OAAA,YAAA,OAAA,GAAA,OAAA,SAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,KAAA,GAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yDAAA,GAvxBIA,WAAY,EACZC,OAAS,KACTC,YAAc,KACdC,cAAgB,KAChBC,MAAQ,CACA,SAAA,IAGNC,OAAS,CACJ,QAAA,CACH,GAAA,UACG,MAAA,UACC,OAAA,WACI,WAAA,WACN,KAAA,KACA,KAAA,WACC,MAAA,CAAE,WACG,WAAA,MAEN,OAAA,CACF,GAAA,SACG,MAAA,SACC,OAAA,UACI,WAAA,UACN,KAAA,UACA,KAAA,uBACC,MAAA,CAAE,UAAW,UACR,WAAA,4BAEL,QAAA,CACH,GAAA,UACG,MAAA,UACC,OAAA,WACI,WAAA,WACN,KAAA,QACA,KAAA,kCACC,MAAA,CAAE,UAAW,SAAU,WAClB,WAAA,sDAEP,MAAA,CACD,GAAA,QACG,MAAA,QACC,OAAA,SACI,WAAA,SACN,KAAA,UACA,KAAA,sBACC,MAAA,CAAE,UAAW,SACR,WAAA,2BAEN,OAAA,CACF,GAAA,SACG,MAAA,SACC,OAAA,UACI,WAAA,UACN,KAAA,UACA,KAAA,uBACC,MAAA,CAAE,UAAW,UACR,WAAA,4BAEJ,SAAA,CACJ,GAAA,WACG,MAAA,WACC,OAAA,YACI,WAAA,YACN,KAAA,UACA,KAAA,yBACC,MAAA,CAAE,UAAW,YACR,WAAA,+BAIVC,KAAO,oBACPC,OAAS,uBACTC,QAAU,wBAEVC,KAAO,IAAIC,IAAIC,OAAO,CAAEC,QAC1BC,UAAyC,cAA7BC,OAAOC,SAASC,SACxB,kBACA,yCAGR,SAASC,UAAUC,GAAGC,IAAAA,EAAO,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,UACvBC,EAAQ,GACIC,EAAEC,QAAQjB,OAAQ,CAAEc,KAAF,IAC1BA,OAAAA,GACD,IAAA,UACK,EAAA,CACN,CAAEI,GAAI,UAAWC,IAAK,YACtB,CAAED,GAAI,SAAUC,IAAK,eACrB,CAAED,GAAI,YAAaC,IAAK,gBACxB,CAAED,GAAI,UAAWC,IAAK,QAExB,MACG,IAAA,SACK,EAAA,CACN,CAAED,GAAI,WAAYC,IAAK,SAGzBC,IAAAA,EAAM,GAQHA,OAPAC,OAAAA,KAAKN,GAAOO,QAAQ,SAACC,GACpBC,IAAAA,EAAKT,EAAMQ,GACbV,EAAEW,EAAGN,KAAOL,EAAEW,EAAGN,IAAIO,OAAS,IAC7BC,EAAAA,MAAQb,EAAEW,EAAGN,IAAIO,OAChBE,EAAAA,KAAKH,MAGNJ,EAAIQ,IAAI,SAACC,GACPC,OAAAA,EAAE,MAAO,CAAEC,MAAO,6CAA+C,CACtED,EAAE,OAAQ,CAAEE,MAAO,MAAMH,EAAEV,IAAKY,MAAO,cAAeE,IAAKJ,EAAEX,GAAIgB,MAAOL,EAAEX,KAC1EY,EAAE,OAAQ,CAAEC,MAAO,wBAA0BF,EAAEH,WAKrD,SAASS,gBAAiBC,IACa,IAAjCrC,MAAMsC,SAASC,QAAQF,IACnBC,MAAAA,SAASE,OAAOxC,MAAMsC,SAASC,QAAQF,GAAM,GAC3CI,QAAAA,IAAI,gBAAiBJ,EAAKrC,MAAMsC,YAElCA,MAAAA,SAASV,KAAKS,GACZI,QAAAA,IAAI,aAAcJ,EAAKrC,MAAMsC,WAIzC,SAASI,cAAcC,EAAMC,GAAMC,IAAAA,EAAO,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EAAGC,EAAKC,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,QAAAA,EAMzCJ,OALFf,EAAAA,KAAK,CAAA,KAAA,EAEFoB,KAAAA,SAASJ,GACfC,OAAAA,IAEKF,EAGT,SAASM,cAAeC,IAGxB,SAASC,kBAAmBD,OAAQE,KAAKR,IAAAA,KAAK,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAAID,KAAK,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAAI5B,KAAK,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,KAC1DsC,EAAI,EACAH,OAAAA,OAAOI,MACR,IAAA,SACA,IAAA,SACA,IAAA,UACCJ,GAAAA,OAAOhD,MAAO,CACZgD,GAAAA,OAAO/C,QAAS,CACZoD,IAAAA,IAAM,SAASC,KAAKC,MACjBC,OAAAA,KAAKD,MADF,CAEVP,OAAO/C,SACL,IAACoD,IAAK,CACJ,EAAA,EACJ,OAGCH,EAAAA,MAAAA,KAA6C,KAARA,IAAcF,OAAOhD,MAAQ,EAC7D,IAANmD,GACYV,cAAAA,KAAMC,KAAMM,OAAOhD,OAGrC,MACG,IAAA,QACCgD,GAAAA,OAAOhD,OAASgD,OAAOS,MAAO,CAC5B,IAAEP,KAAqB,GAAdA,IAAI1B,SAAiB0B,MAA2B,GAAnBF,OAAO9C,SAAe,CAC1D,EAAA,EACJ,MAEE8C,GAAAA,OAAO/C,QAAS,CACZoD,IAAAA,KAAM,SAASC,KAAKC,MACjBC,OAAAA,KAAKD,MADF,CAEVP,OAAO/C,SACL,IAACoD,KAAK,CACJ,EAAA,EACJ,OAGAH,GAAAA,IAAK,CACHQ,IAAAA,IAAMR,IAAIvB,IAAI,SAACf,EAAG+C,GACHV,IAAAA,EAAAA,kBAAkBD,OAAOS,MAAO7C,EAAG8B,KAAKkB,OAAO,CAACD,IAAKlB,KAAM5B,MACrEgD,OAFmB,eAAA,EAAA,GAAA,KAIxB9C,EAAAA,EAAE+C,IAAIJ,MAAQA,IAAIlC,OAASwB,OAAOhD,YAExByC,cAAAA,KAAMC,KAAMM,OAAOhD,OAC7B,EAAA,EAGR,MACG,IAAA,SACCgD,GAAAA,OAAOe,WAAY,CACjBf,GAAAA,OAAOhD,OAASgD,OAAO/C,QAAS,CAC5BoD,IAAAA,MAAM,SAASC,KAAKC,MACjBC,OAAAA,KAAKD,MADF,CAEVP,OAAO/C,SACL,IAACoD,MAAK,CACJ,EAAA,EACJ,OAGAW,IAAAA,QAAU,GACVC,SAAW,GACR7C,OAAAA,KAAK4B,OAAOe,YAAY1C,QAAQ,SAAK,GACtC6C,IAAAA,EAAKlB,OAAOe,WAAWI,GACvBD,GAAAA,EAAGlE,MAAO,CACJmE,QAAAA,GAAKD,EAAGlE,MACCiD,IAAAA,EAAAA,kBAAkBiB,EAAIhB,IAAMA,IAAIiB,GAAK,KAAMzB,KAAKkB,OAAO,CAACO,IAAK1B,KAAMS,KAA5EW,EAFI,eAAA,EAAA,GAAA,GAGHM,SAAAA,GAAKN,KAGdO,OAAOhD,KAAK4C,SAASxC,OAAS,IAC5BT,EAAAA,EAAE+C,IAAIM,OAAOC,OAAOJ,WAAalD,EAAE+C,IAAIM,OAAOC,OAAOL,WAEjD,IAANb,GACYV,cAAAA,KAAMC,KAAMM,OAAOhD,QAKlC,MAAA,CAAEmD,EAAGV,MAGd,SAAS6B,iBAAiBC,GACpBC,IAAAA,EAAID,EAAIE,MAAM,iBACVF,OAAAA,EAAI/C,QAAWgD,EAAOA,EAAEhD,OAAL,GAG7B,SAASkD,gBAAiBhC,EAAMiC,GAG8C1C,MAAAA,qEAF9D2C,UAAcC,IAAAA,SAAS5D,GAAO6B,KAAAA,SAASJ,IAEqCoC,UADzDH,mBAAAA,EAAjC,KAIF,SAASI,QAASZ,GACZ,IAACA,EACI,OAAA,KAEKA,YAAAA,EAGhB,SAASa,WAAYtB,EAAKV,GACjBF,OAAAA,SAASY,GAAO,KAAKV,EAAOI,MAAMJ,EAAOiC,OAAQ,IAAMjC,EAAOiC,OAAS,IAAI,IAGpF,SAASnC,SAAUY,GACVA,OAAAA,EAAIwB,OAAO,SAAC/D,EAAKgE,GAClB,MAAa,iBAANA,EACFhE,EAAM,IAAIgE,EAAE,IAEJ,iBAANA,GAAmBA,EAAEV,MAAM,mBAG/BtD,EAAM,IAAMgE,EAFVhE,EAAM,KAAMgE,EAAE,OAM3B,SAASC,YACO,YAAA,KAGhB,SAASC,aAAalD,EAAKiB,GACrBA,GAAAA,EAAKqB,MAAM,aACN5C,OAAAA,EAAE,IAAK,CAAEyD,KAAMnD,GAAOA,GAG3B,IADOxC,OAAOyD,GAET,MAAA,IAEHkC,IAAAA,EAAO3F,OAAOyD,GAAMmC,IAAIC,QAAQ,MAAOrD,GACtCN,OAAAA,EAAE,IAAK,CAAEyD,KAAF,EAAQG,OAAQ,UAAYtD,GAG5C,SAASuD,YAAY9E,GAAGwC,IAAAA,EAAO,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,UAC3BuC,EAAAA,MAAQrB,iBAAiBsB,KAAKC,UAAU9E,EAAE+E,OAAOlF,EAAG,SAAC+D,EAAOoB,GACrD,OAACA,EAAItB,MAAM,UAElBuB,EAAAA,MAAQ,KACRC,EAAAA,WAAa,KACYhD,IAAAA,EAAAA,kBAAkBpD,cAAee,GANpB,EAAA,eAAA,EAAA,GAMhCqD,EANgC,EAAA,GAAA,EAAA,GAOtCiC,EAAAA,QAAUvF,UAAUC,EAAGwC,GACvB+C,EAAAA,UAAYlC,EAoCPrD,MAnCU,CAAE,IAAK,SAAU,YAAa,UAAW,OAAQ,eACzDS,QAAQ,SAAK,GAChBT,GAAAA,EAAEoF,MAAO,OAAO,KAChBI,IAAAA,EAAKxF,EAAEyF,GACD,MAANA,IACG,EAAA,CAACzF,IAEJwF,GAAMA,EAAG5E,OAAS,GACjBH,EAAAA,QAAQ,SAAM,GACXT,GAAAA,EAAEoF,QAAUM,EAAGC,OAAQ,OAAO,KAC9BD,EAAGC,OAAOC,cACVR,EAAAA,MAAQM,EAAGC,OAAOC,YAAYC,MAE9BH,EAAGC,OAAOG,WACVT,EAAAA,WAAaK,EAAGC,OAAOG,UAAUD,KAC9B7F,EAAEoF,QACHA,EAAAA,MAAQpF,EAAEqF,aAELK,EAAGC,OAAOC,cACjBP,EAAAA,WAAaK,EAAGC,OAAOC,YAAYC,UAgBtC7F,EAGT,SAAS+F,QAASvD,GACZwD,IAAAA,EAAK,KACDxD,OAAAA,GACD,IAAA,SACEyD,EAAAA,SACL,MACG,IAAA,QACEC,EAAAA,QACL,MACG,IAAA,SACEC,EAAAA,SACL,MACG,IAAA,UACEC,EAAAA,UACL,MACG,IAAA,SACEC,EAAAA,SAGFL,OAAAA,EAGT,SAASM,YACArF,OAAAA,EAAE,YAAa,cAGxB,SAASmF,UAAWhE,EAAQb,GACnBA,OAAQ,IAARA,EAAe,OAAiB,IAARA,EAAgB,KAAO+E,YAGxD,SAASL,SAAU7D,EAAQb,EAAKO,EAAM7B,GAChCsB,GAAAA,MAAAA,EACK+E,OAAAA,YAELC,IAAAA,EAAQzE,EAAKA,EAAKlB,OAAO,GACzBwB,GAAAA,EAAOoE,OAAwC,UAA/BpE,EAAOoE,MAAMC,eACxBxF,OAAAA,EAAE,MAAO,CACdA,EAAE,MAAO,CAAEyF,IAAK,6BAA+BnF,EAAKL,MAAO,yBAG3DX,IAAAA,EAAMgB,EAUNgF,GATkB,QAAlBnE,EAAOiC,OACHpD,EAAAA,EAAE,IAAK,CAAEyD,KAAMnD,EAAKsD,OAAQ,UAAYtD,GAErB,SAAlBa,EAAOiC,OACL9C,EAAAA,EAAQoF,KAAAA,OAAOpF,GAAKqF,UAA7B,IAEwB,SAAjBxE,EAAOiC,SACRI,EAAAA,aAAalD,EAAKO,EAAK+E,OAAO,GAAG,KAE3B,qBAAVN,EACsB,aAApBtG,EAAK6G,aACD7F,EAAAA,EAAE,IAAK,CAAEyD,KAAsCnD,gCAAAA,EAAOsD,OAAQ,UAAYtD,SAG/E,GAAc,cAAVgF,EAAuB,CAC1BQ,IAAAA,EAAM,KACF9G,OAAAA,EAAK+G,UACN,IAAA,MACqCzF,EAAAA,kCAAAA,EACxC,MACG,IAAA,UACoDA,EAAAA,iDAAAA,EAGvDwF,IACI9F,EAAAA,EAAE,IAAK,CAAEyD,KAAMqC,EAAKlC,OAAQ,UAAYtD,IAG3CN,OAAAA,EAAE,MAAO,CACdV,EACAU,EAAE,WAAYA,EAAE,IAAK,CAAEyD,KAAMZ,gBAAgBhC,EAAMP,IAAQN,EAAE,oBAIjE,SAASkF,SAAU/D,EAAQb,GAClBA,OAAAA,GAAO+E,YAGhB,SAASJ,QAAS9D,EAAQb,EAAKO,EAAM7B,GAC/B,IAACsB,GAAsB,IAAfA,EAAIX,OACP0F,OAAAA,YAELN,IAAAA,EAAKD,QAAQ3D,EAAOS,MAAML,MACvBjB,OAAAA,EAAIR,IAAI,SAACf,EAAGyF,GACVO,OAAAA,EAAKA,EAAG5D,EAAOS,MAAO7C,EAAG8B,EAAKkB,OAAO,CAACyC,IAAKxF,GAAQ,OAI9D,SAASoG,SAASjE,EAAQqB,EAAQ3B,GAAW,UAAA,OAAA,QAAA,IAAA,UAAA,IAAA,UAAA,GAAL7B,IAClCgH,EAAU,SAAC1G,GAAQA,OAAAA,GACnB6B,GAAAA,EAAO8E,kBAAmB,CACxBzD,IAAAA,EAMK6C,OAAAA,YALAnD,EAAAA,WAAa,GACb3C,OAAAA,KAAKiD,GAAQhD,QAAQ,SAAK,GACxB0C,EAAAA,WAAWJ,GAAK,CAAEP,KAAM,SAAU6B,OAAQjC,EAAO,4BAM1D,OAACA,EAAOe,YAGRf,EAAO+E,KAAOrF,EAAKlB,OAAS,IACpB,EAAA,SAACwG,GACHvD,IAAAA,EAAQzB,EAAO+E,IAAItD,MAAM,wBAC3B,IAACA,EACIuD,OAAAA,EAEHC,IAAAA,EAAU,CACNpI,OAAAA,cAAckE,WAAWmE,QAAQzE,MAClC5D,MAAAA,cAAckE,WAAWoE,OAAO1E,MAC7B5D,SAAAA,cAAckE,WAAWqE,UAAU3E,MACrC5D,OAAAA,cAAckE,WAAWsE,QAAQ5E,MAChC5D,QAAAA,cAAckE,WAAWmE,QAAQzE,MAAMM,WAAWuE,SAAS7E,MAC5D5D,OAAAA,cAAckE,WAAWqE,UAAU3E,MAAMM,WAAWwE,QAAQ9E,OAEhE+E,EAAc/D,EAAM,GACpBrC,GAAmE,IAAxDtC,MAAMsC,SAASC,QAAWoC,EAAM,GAAMJ,IAAAA,EAAOpD,IACzDgH,EAAQO,IACHjG,QAAAA,IAAI,iBAAkBiG,GAELvF,IAAAA,EAAAA,kBAAkBgF,EAAQO,GAAcnE,GAlBlD,EAAA,eAAA,EAAA,GAkBTJ,EAlBS,EAAA,GAAA,EAAA,GAuCVwE,OAnBS5G,EAAE,eAAgB,CAChCA,EAAE,YAAa,CACbA,EAAE,cAAe,CACfA,EAAE,cAAeA,EAAE,IAAK,CAAEyD,KAAUkD,IAAAA,EAAenE,KAAAA,EAAOqE,KAAOrE,EAAOpD,IAAM0H,SAAU9G,EAAE+G,MAAMC,MAAQhH,EAAE,IAAKwC,EAAOyE,QACtHjH,EAAE,cAAmBwC,IAAAA,EAAOpD,GAFb,OAIjBY,EAAE,eAAgB,CAChBA,EAAE,cAAe,CACflB,UAAU0D,EAAQmE,KAEpB3G,EAAE,cAAe,CAAEC,MAAO,8BAAgC,CACxDD,EAAE,OAAQ,CAAEC,MAAO,0CAAqD,IAATmC,GAAc8E,QAAQ,GAAK,KAC1FlH,EAAE,wCAAyC,CAAE8C,MAAOV,EAAU+E,IAAK,GAAQ/E,EAFnB,OAI1DpC,EAAE,cAAeA,EAAE,IAAK,CAAEoH,QAASpH,EAAEqH,SAAS,QAAShH,iBAAkByC,MAAU6D,EAAenE,IAAAA,EAAOpD,IAAQmB,EAAW,WAAa,eAG7IA,EAAWP,EAAE,MAAOmG,GAAO,SAK1BH,EAAQhG,EAAE,cAAeA,EAAE,QAASuC,OAAOhD,KAAK4B,EAAOe,YAAYpC,IAAI,SAAK,GAC7EjC,GAAAA,iBAA4BmD,IAAdwB,EAAOF,IAAkC,OAAdE,EAAOF,IAC3C,OAAA,KAEHgF,IAAAA,EAAQnG,EAAOe,WAAWI,GAC5BgD,EAAQzE,EAAKkB,OAAO,CAACO,IACrByC,EAAKD,QAAQwC,EAAM/F,MACnBgG,EAAS,CAAE,YAAapE,WAAWmC,EAAOgC,GAAQE,aAAcxH,EAAEqH,SAAS,YAAanE,SAAUuE,aAAczH,EAAEqH,SAAS,YAAa9D,YACrIvD,OAAAA,EAAE,KAAMuH,EAAQ,CACrBvH,EAAE,KAAMsH,EAAMlH,OAASkC,GACvBtC,EAAE,KAAM+E,EAAKA,EAAGuC,EAAO9E,EAASA,EAAOF,GAAK,KAAMgD,EAAO9C,GAAU,iBAAiB8E,EAAM/F,cAvDrFvB,EAAE,MAAO,cA4DpB,SAAS0H,WAAWtI,GAC8BmC,MAAAA,0CADnB,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,QAC8CnC,uBAAAA,EAA3E,gBAGF,IAAMuI,OAAS,CAAA,OACH,WACFjJ,IAAAA,EAAyC,cAA7BC,OAAOC,SAASC,SAC9B,kDACA,wDACI+I,QAAAA,IAAI,CACVtJ,KAAKuJ,MAAM,UACX7H,EAAE8H,QAAQpJ,KACTqJ,KAAK,SAAO,GACJzI,OAAAA,EAAI,GACGA,cAAAA,EAAI,GAClB0I,EAAAA,YAXO,KAcPC,SAAAA,GACGjI,OAAAA,EAAE,MAAO,CACdA,EAAE,eAAgB,CAAEC,MAAO,CAAEiI,QAASnK,YAAc,QAAU,SAAWA,aACzEiC,EAAE,MAAO,CAAE,MAAS,wBAA2B,CAC7CA,EAAE,oBAAqB,CACrBA,EAAE,aAAc,CACdA,EAAE,gBAAiB,CACjBA,EAAE,gBAAiB,CAAEyD,KAAM,+BAAiC,CAC1DzD,EAAE,SACFA,EAAE,aAAc,CACdA,EAAE,YAAa,QACf,SACAA,EAAE,aAAc,cAItBA,EAAE,eAAgB,CAChBA,EAAE,gBAAiB,CACjBA,EAAE,gBAAiB,CAAEyD,KAAM,8BAAgC,YAC3DzD,EAAE,wBAAyB,CAAEyD,KAAM,kCAAoC,YACvEzD,EAAE,gBAAiB,CAAEyD,KAAM,gCAAkC,YAE/DzD,EAAE,cAAe,CACfA,EAAE,gBAAiB,CAAEyD,KAAM,KAAO,sBAClCzD,EAAE,gBAAiB,CAAEyD,KAAM,KAAO,eAK1CzD,EAAE,aACIlC,QAAUE,cACLgC,EAAE,QAASiI,EAAME,UAEnBnI,EAAE,MAAO,CAAEC,MAAO,iBAAmB,qBAOlDmI,aAAe,KACfC,YAAc,KACdzD,KAAO,KACP0D,OAAS,OACTC,aAAc,EACdC,UAAY,KACZC,cAAgB,KAChBC,UAAY,KACZC,YAAc,WAElB,SAASC,aAAcX,GACjBY,IAAAA,EAAQH,UAAYxJ,EAAE4J,KAAK5K,OAAQ,CAAE6K,WAAYd,EAAMe,MAAMzH,MAAQoH,cACpED,WACKO,QAAAA,MAAM,eAAgBJ,GAGpBA,UAAAA,EACIA,cAAAA,EAAME,WACjBlB,KAAAA,MAAMa,UAAU7H,MAAMkH,KAAK,SAAO,GAC9B5B,KAAAA,EAAIrG,IAAI,SAAK,GACX+D,OAAAA,YAAY9E,EAAG8J,EAAMzJ,MAEfF,aAAAA,EAAEgK,MAAMtE,MACrBoD,EAAAA,WAIN,IAAMmB,YAAc,CAAA,OACVlB,SAAAA,GACOA,aAAAA,GACO,OAAhBI,aACGR,KAAAA,MAAM,YAAYE,KAAK,SAAC1F,GACbnD,YAAAA,EAAEgK,MAAM7G,GACpB2F,EAAAA,YANU,SAURC,SAAAA,GACJQ,iBAAmBR,EAAMe,MAAMzH,MAAQoH,cAC5BV,aAAAA,IAZC,KAeV,WACFrD,GAAS,OAATA,MAAiC,OAAhByD,YACZrI,OAAAA,EAAE,MAAO,CAAEC,MAAO,iBAAmB,cAGrCmJ,SAAAA,IACAlK,KAAAA,EAAEoJ,OAAO1D,KAAM0D,QAClBC,cACK3D,KAAAA,KAAKyE,WAGPC,SAAAA,EAAWxG,GACdwF,QAAUxF,EACHA,OAAAA,EAEK,aAACyF,YAEjBa,IAeKpJ,OAFPoJ,IAEOpJ,EAAE,MAAO,CACdA,EAAE,uBAAwB,CACxBA,EAAE,cAAe,CACfA,EAAE,cAAe,CACfA,EAAE,gBAAoB0I,UAAUa,OAAWnB,KAAAA,aAAazI,OADzC,OAGjBK,EAAE,cAAe,CACfA,EAAE,oBAAqB,CAAEwJ,YAAuBd,UAAAA,UAAUa,OAAOE,cAA1C,MAA8DC,QAAS1J,EAAEqH,SAAS,QAnBxGsC,SAAW7G,GAEd,GADG5D,KAAAA,EAAEgK,MAAMd,eACVtF,EACI,OAAA,KAEF8B,KAAAA,KAAKgF,OAAO,SAACtH,GACXuH,OAAAA,QAAQvH,EAAE2E,KAAKrE,MAAM,IAAIkH,OAAOhH,EAAO,mBAgB9C9C,EAAE,eAAgB,CAChBA,EAAE,cAAeA,EAAE,sBAAuBuC,OAAOhD,KAAKrB,QAAQ4B,IAAI,SAACiK,GAC3DlB,IAAAA,EAAQ3K,OAAO6L,GAKd/J,OAHH0I,UAAUtJ,KAAOyJ,EAAMzJ,IACb,sBAEPY,EAAE,yBAA0B,CACvB6I,KAAAA,IAAAA,EAAME,WACN/I,SAAAA,EAAE+G,MAAMC,KACV0B,MAAAA,UAAUtJ,KAAOyJ,EAAMzJ,GAAM,yBAA2B,IAC/DyJ,EAAMU,gBAIfvJ,EAAE,eAAgB,CAChBA,EAAE,cAAe,CACfA,EAAE,QAAS,CACTA,EAAE,KAAM,CACW,YAAjB0I,UAAUtJ,GAAmBY,EAAE,KAAM,WAAa,KAClDA,EAAE,KAAM,IACRA,EAAE,KAAMA,EAAE,IAAK,CAAEoH,QAASpH,EAAEqH,SAAS,QAASiC,GAAaxG,MAAO,QAAU,SAC5E9C,EAAE,KAAM,YACRA,EAAE,KAAMA,EAAE,IAAK,CAAEoH,QAASpH,EAAEqH,SAAS,QAASiC,GAAaxG,MAAO,aAAe,iBACjF9C,EAAE,KAAMA,EAAE,IAAK,CAAEoH,QAASpH,EAAEqH,SAAS,QAASiC,GAAaxG,MAAO,SAAW,cAC7E9C,EAAE,KAAM,UACRA,EAAE,KAAM,wBAGZA,EAAE,QACO4E,KAAK9E,IAAI,SAAK,GACbkK,IAAAA,EAAiBtB,IAAAA,UAAUtJ,GAAML,KAAAA,EAAE8H,KAAO9H,EAAEK,IAC3CY,OAAAA,EAAE,KAAM,CAAEkE,IAAKnF,EAAEK,IAAM,CACX,YAAjBsJ,UAAUtJ,GACRY,EAAE,KAAM,WACF,IAACjB,EAAE8H,IACE7G,OAAAA,EAAE,OAAQ,OAEbiK,IAAAA,EAAKlL,EAAE8H,IAAIqD,MAAM,KAAK,GACtBC,EAAMjL,EAAE4J,KAAKT,YAAa,CAAEjJ,GAAI6K,IAC/BjK,OAAAA,EAAE,IAAK,CAAEyD,KAAM,YAAYwG,EAAInD,SAAU9G,EAAE+G,MAAMC,MAAQmD,EAAIlD,MAN9D,IAQN,KACJjH,EAAE,eAAgBA,EAAE,MAAO,CACzBjB,EAAEoF,MAAQnE,EAAE,MAAO,CAAEyF,IAAK,6BAA+B1G,EAAEoF,QAAW,MAExEnE,EAAE,KAAMA,EAAE,iBAAkB,CAAEyD,KAAMuG,EAAYlD,SAAU9G,EAAE+G,MAAMC,MAAQjI,EAAEkI,OAC5EjH,EAAE,KAAMjB,EAAEsF,SACVrE,EAAE,KAAMA,EAAE,MAAO,CACfA,EAAE,wCAAyC,CAAE8C,MAAO/D,EAAEuF,UAAW6C,IAAK,GAAQpI,EAAEuF,UADjE,QAGjBtE,EAAE,MAAOjB,EAAE+E,MAAM,KAAMoD,QAAQ,GAAK,OACpClH,EAAE,KAAM,CACNA,EAAE,IAAK,CAAEyD,KAAMiE,WAAW3I,EAAEK,KAAO,UACnC,KACAY,EAAE,IAAK,CAAEyD,KAAMiE,WAAW3I,EAAEK,GAAI,SAAW,UAE7CY,EAAE,KAAMA,EAAE,IAAK,CAAEyD,KAAMuG,EAAYlD,SAAU9G,EAAE+G,MAAMC,MAAQ,wBAUzEhE,SAAW,KACXoH,SAAW,WACXC,WAAa,KACbC,SAAW,KAEf,SAASC,SAAUtC,GACX1H,MAAAA,SAAW,GACXgB,IAAAA,EAAO0G,EAAMe,MAAMzH,KACrBnC,EAAK6I,EAAMe,MAAM5J,GACjB6I,EAAMe,MAAMwB,QACT,EAAA,CAAEpL,EAAI6I,EAAMe,MAAMwB,OAAQC,KAAK,MAEjCC,KAAAA,IAAInJ,EAAMnC,GAAI2I,KAAK,SAAO,GAClBlE,SAAAA,YAAYsC,EAAK5E,GACjB,SAAA,CAAE0G,EAAMe,MAAMzH,KAAM0G,EAAMe,MAAM5J,GAAI6I,EAAMe,MAAMwB,OAAQC,KAAK,KACtEzC,EAAAA,WAIN,IAAM2C,QAAU,CAAA,OACN1C,SAAAA,GACGA,SAAAA,IAFG,SAIJA,SAAAA,GACF7I,IAAAA,EAAK,CAAE6I,EAAMe,MAAMzH,KAAM0G,EAAMe,MAAM5J,GAAI6I,EAAMe,MAAMwB,OAAQC,KAAK,KACpEH,WAAalL,GACN6I,SAAAA,IAPC,KAURA,SAAAA,GACA,IAACjF,SACIhD,OAAAA,EAAE,MAAO,CAAEC,MAAO,iBAAmB,cAErC2K,SAAAA,EAAcrJ,GACVA,SAAAA,EAEPe,IAAAA,EAAIU,SACJ6F,EAAQ3K,OAAO+J,EAAMe,MAAMzH,MAE7B,OAACsH,GAKAA,EAAMgC,QACHA,EAAAA,MAAQ,CAAC,YAGV7K,EAAE,MAAO,CACdA,EAAE,uBAAwB,CACxBA,EAAE,cAAe,CACfA,EAAE,cAAe,CACfA,EAAE,gBAAiB6I,EAAMgC,MAAM/K,IAAI,SAACiK,EAAKhL,GACjC+L,IAAAA,EAAM5M,OAAO6L,GACZ,MAAA,CACJhL,EAAI,EAAKiB,EAAE,OAAQ,OAAS,KAC7B,IACAA,EAAE,IAAK,CAAEyD,KAAUqH,IAAAA,EAAI/B,WAAcjC,SAAU9G,EAAE+G,MAAMC,MAAQ8D,EAAI1L,IACnE,KACAY,EAAE,IAAK,CAAEyD,KAAUqH,IAAAA,EAAI1L,GAAO0L,KAAAA,EAAID,OAASvI,EAAEuE,IAAOvE,EAAEuE,IAAIqD,MAAM,KAAKtE,MAAM,EAAE7G,EAAE,GAAG0L,KAAK,KAAOnI,EAAElD,IAAM0H,SAAU9G,EAAE+G,MAAMC,MAAS6B,EAAMgC,MAAMlL,OAAS,GAAM2C,EAAEuE,IAAMvE,EAAEuE,IAAIqD,MAAM,KAAKnL,GAAauD,EAAElD,cAM9MY,EAAE,cAAe,CACfA,EAAE,SAAU,CACVA,EAAE,cAAe,CACfsC,EAAE8B,WAAapE,EAAE,eAAgBA,EAAE,YAAaA,EAAE,MAAO,CAAEyF,IAAK,6BAA+BnD,EAAE8B,eAAkB,GACnHpE,EAAE,eAAgBA,EAAE,gBAAiBsC,EAAE2E,SAEzCjH,EAAE,eAAgB,CAChBA,EAAE,cAAesC,EAAE+B,SACnBrE,EAAE,eAAgB,CAAEyD,KAAMiE,WAAWpF,EAAElD,GAAI,SAAW,CACpDY,EAAE,kBAAmB,CAAEC,MAAO,4CAC9B,mBAEFD,EAAE,cAAe,CACfA,EAAE,sBAAuB,CACvBA,EAAE,cAAe,CAAEE,MAAoB,aAAbkK,SAA0B,yBAA2B,GAAIhD,QAASpH,EAAEqH,SAAS,QAASuD,GAAe9H,MAAO,YAAc,YACpJ9C,EAAE,cAAe,CAAEE,MAAoB,WAAbkK,SAAwB,yBAA2B,GAAIhD,QAASpH,EAAEqH,SAAS,QAASuD,GAAe9H,MAAO,UAAY,kBAKxJ,WACMsH,GAAa,WAAbA,SAAuB,CACnB3E,IAAAA,EAAM1B,KAAKC,UAAU1B,EAAG,KAAM,GAC7BtC,OAAAA,EAAE,cAAe,CACtBA,EAAE,MAAOA,EAAE+K,MAAMC,KAAKC,UAAU,OAAQxF,GAAK3C,UAG7C9E,GAAkB,OAAlBA,cACKgC,OAAAA,EAAE,MAAO,CAAEC,MAAO,iBAAmB,cAExCkB,IAAAA,EAAS0H,EAAMqC,WAAaC,SAASC,OAAOpN,cAAe6K,EAAMqC,YAAclN,cAE9EgC,OADMoF,WAAAA,SAASjE,EAAQ6B,SAAU,IACjChD,EAAE,aAAcqK,YAZzB,SA7CM3J,QAAAA,IAAI,sBAAuBuH,EAAMe,MAAMzH,MACxC,QA+DPvC,KAAOqM,SAASC,eAAe,iBACrCtL,EAAE+G,MAAM/H,KAAM,IAAK,CACZ,IAAA,CAAEuM,OAAQ,WAAMvL,OAAAA,EAAE2H,OAAQ3H,EAAEmJ,gBACvB,SAAA,CAAEoC,OAAQ,SAACtD,GAAUjI,OAAAA,EAAE2H,OAAQ3H,EAAEmJ,YAAalB,EAAMe,UAChD,aAAA,CAAEuC,OAAQ,SAACtD,GAAUjI,OAAAA,EAAE2H,OAAQ3H,EAAE2K,QAAS1C,EAAMe","file":"src.20c6c361.map","sourceRoot":"../src","sourcesContent":["\nvar hideEmpty = true\nvar webIds = null\nvar currentPath = null\nvar projectSchema = null\nvar state = {\n  expanded: []\n}\n\nconst models = {\n  project: {\n    id: 'project',\n    title: 'Project',\n    plural: 'Projects',\n    collection: 'projects',\n    root: null,\n    path: 'projects',\n    pathx: [ 'project' ],\n    schemapath: null\n  },\n  ledger: {\n    id: 'ledger',\n    title: 'Ledger',\n    plural: 'Ledgers',\n    collection: 'ledgers',\n    root: 'project',\n    path: 'projects[].ledgers[]',\n    pathx: [ 'project', 'ledger' ],\n    schemapath: 'properties.ledgers.items'\n  },\n  network: {\n    id: 'network',\n    title: 'Network',\n    plural: 'Networks',\n    collection: 'networks',\n    root: 'asset',\n    path: 'projects[].ledgers[].networks[]',\n    pathx: [ 'project', 'ledger', 'network' ],\n    schemapath: 'properties.ledgers.items.properties.networks.items'\n  },\n  asset: {\n    id: 'asset',\n    title: 'Asset',\n    plural: 'Assets',\n    collection: 'assets',\n    root: 'project',\n    path: 'projects[].assets[]',\n    pathx: [ 'project', 'asset' ],\n    schemapath: 'properties.assets.items'\n  },\n  client: {\n    id: 'client',\n    title: 'Client',\n    plural: 'Clients',\n    collection: 'clients',\n    root: 'project',\n    path: 'projects[].clients[]',\n    pathx: [ 'project', 'client' ],\n    schemapath: 'properties.clients.items'\n  },\n  exchange: {\n    id: 'exchange',\n    title: 'Exchange',\n    plural: 'Exchanges',\n    collection: 'exchanges',\n    root: 'project',\n    path: 'projects[].exchanges[]',\n    pathx: [ 'project', 'exchange' ],\n    schemapath: 'properties.exchanges.items'\n  }\n}\n\nconst wcol = 'opencrypto-weight'\nconst wcolif = 'opencrypto-weight-if'\nconst wcolmin = 'opencrypto-weight-min'\n\nconst ocdx = new ocd.Client({ dataUrl: \n    schemaUrl = window.location.hostname === 'localhost'\n      ? '/data/data.json'\n      : 'https://data.opencrypto.io/data.json'\n })\n\nfunction getCounts(i, root = 'project') {\n  let types = []\n  const submods = _.findKey(models, { root })\n  switch (root) {\n    case 'project':\n      types = [\n        { id: 'ledgers', ico: 'database' },\n        { id: 'assets', ico: 'dollar-sign' },\n        { id: 'exchanges', ico: 'exchange-alt' },\n        { id: 'clients', ico: 'cog' },\n      ]\n      break\n    case 'ledger':\n      types = [\n        { id: 'networks', ico: 'plug' }\n      ]\n  }\n  let out = []\n  Object.keys(types).forEach((t) => {\n    const tc = types[t]\n    if (i[tc.id] && i[tc.id].length > 0) {\n      tc.count = i[tc.id].length\n      out.push(tc)\n    }\n  })\n  return out.map((o) => {\n    return m('div', { style: 'display:inline-block; padding-right: 1em;' }, [\n      m('i.fa', { class: 'fa-'+o.ico, style: 'color: grey', alt: o.id, title: o.id }),\n      m('span', { style: 'padding-left: 0.5em;' }, o.count)\n    ])\n  })\n}\n\nfunction expandSubschema (val) {\n  if (state.expanded.indexOf(val) !== -1) {\n    state.expanded.splice(state.expanded.indexOf(val), 1)\n    console.log('de-expanded: ', val, state.expanded)\n  } else {\n    state.expanded.push(val)\n    console.log('expanded: ', val, state.expanded)\n  }\n}\n\nfunction progressError(msgs, path, weight=1, text=undefined) {\n  msgs.push({\n    text,\n    path: makePath(path),\n    weight\n  })\n  return msgs\n}\n\nfunction checkWeightIf (schema) {\n}\n\nfunction calculateProgress (schema, obj, path=[], msgs=[], root=null) {\n  let w = 1\n  switch (schema.type) {\n    case 'string':\n    case 'number':\n    case 'boolean':\n      if (schema[wcol]) {\n        if (schema[wcolif]) {\n          const ret = function test(code) {\n            return eval(code)\n          }(schema[wcolif])\n          if (!ret) {\n            w = 1\n            break\n          }\n        }\n        w = (obj !== undefined && obj !== null && obj !== '') ? schema[wcol] : 0\n        if (w === 0) {\n          progressError(msgs, path, schema[wcol])\n        }\n      }\n      break\n    case 'array':\n      if (schema[wcol] && schema.items) {\n        if (((obj && obj.length == 0) || !obj) && schema[wcolmin] == 0) {\n          w = 1\n          break\n        }\n        if (schema[wcolif]) {\n          const ret = function test(code) {\n            return eval(code)\n          }(schema[wcolif])\n          if (!ret) {\n            w = 1\n            break\n          }\n        }\n        if (obj) {\n          let arr = obj.map((i, k) => {\n            const [ prog ] = calculateProgress(schema.items, i, path.concat([k]), msgs, root)\n            return prog\n          })\n          w = _.sum(arr) / (arr.length * schema[wcol])\n        } else {\n          progressError(msgs, path, schema[wcol])\n          w = 0\n        }\n      }\n      break\n    case 'object':\n      if (schema.properties) {\n        if (schema[wcol] && schema[wcolif]) {\n          const ret = function test(code) {\n            return eval(code)\n          }(schema[wcolif])\n          if (!ret) {\n            w = 1\n            break\n          }\n        }\n        let weights = {}\n        let progress = {}\n        Object.keys(schema.properties).forEach(p => {\n          let pd = schema.properties[p]\n          if (pd[wcol]) {\n            weights[p] = pd[wcol]\n            const [ prog ] = calculateProgress(pd, obj ? obj[p] : null, path.concat([p]), msgs, obj)\n            progress[p] = prog\n          }\n        })\n        if (Object.keys(weights).length > 0) {\n          w = _.sum(Object.values(progress)) / _.sum(Object.values(weights))\n        }\n        if (w === 0) {\n          progressError(msgs, path, schema[wcol])\n        }\n      }\n      break\n  }\n  return [ w, msgs ]\n}\n\nfunction getLengthInBytes(str) {\n  var b = str.match(/[^\\x00-\\xff]/g);\n  return (str.length + (!b ? 0: b.length)); \n}\n\nfunction githubIssueLink (path, value) {\n  const title = encodeURI(`(${dataItem.id}) ${makePath(path)}`)\n  const body = `Current value: \\`${value}\\``\n  return `https://github.com/opencrypto-io/data/issues/new?labels=bug&title=${title}&body=${body}`\n}\n\nfunction setPath (p) {\n  if (!p) {\n    return null\n  }\n  currentPath = p\n}\n\nfunction makeFooter (arr, schema) {\n  return makePath(arr) + ' <'+schema.type+(schema.format? ':' + schema.format : '')+'>'\n}\n\nfunction makePath (arr) {\n  return arr.reduce((out, v) => {\n    if (typeof v === 'number') {\n      return out + '['+v+']'\n    }\n    if (typeof v === 'string' && !v.match(/^[a-zA-Z0-9_]+$/)) {\n      return out + '[\\''+v+'\\']'\n    }\n    return out + '.' + v\n  })\n}\n\nfunction unsetPath () {\n  currentPath = null\n}\n\nfunction resolveWebId(val, type) {\n  if (type.match(/^custom\\//)) {\n    return m('a', { href: val }, val)\n  }\n  const wd = webIds[type]\n  if (!wd) {\n    return '#'\n  }\n  const href = webIds[type].url.replace('@id', val)\n  return m('a', { href, target: '_blank' }, val)\n}\n\nfunction processItem(i, type = 'project') {\n  i._size = getLengthInBytes(JSON.stringify(_.pickBy(i, (value, key) => {\n    return !key.match(/^_/)\n  })))\n  i._logo = null\n  i._logo_full = null\n  const [ progress, msgs ] = calculateProgress(projectSchema, i)\n  i._counts = getCounts(i, type)\n  i._progress = progress\n  const baseCols = [ '@', 'assets', 'exchanges', 'clients', 'apps', 'blockchains' ]\n  baseCols.forEach(c => {\n    if (i._logo) return null\n    let ic = i[c] \n    if (c === '@') {\n      ic = [i]\n    }\n    if (ic && ic.length > 0) {\n      ic.forEach(ci => {\n        if (i._logo || !ci.images) return null\n        if (ci.images.logo_square) {\n          i._logo = ci.images.logo_square.data\n        }\n        if (ci.images.logo_full) {\n          i._logo_full = ci.images.logo_full.data\n          if (!i._logo) {\n            i._logo = i._logo_full\n          }\n        } else if (ci.images.logo_square) {\n          i._logo_full = ci.images.logo_square.data\n        }\n      })\n    }\n  })\n  /*for(let n = 0; n <= 3; n++) {\n    var asset0 = i.assets[n]\n    if (!asset0) continue\n    if (asset0.images && asset0.images.logo_square) {\n      i._logo = asset0.images.logo_square.data\n      i._logo_full = i._logo\n    }\n    if (asset0.images && asset0.images.logo_full) {\n      i._logo_full = asset0.images.logo_full.data\n    }\n  }*/\n  return i\n}\n\nfunction getType (type) {\n  let fn = null\n  switch (type) {\n    case 'string':\n      fn = OCString\n      break\n    case 'array':\n      fn = OCArray\n      break\n    case 'number':\n      fn = OCNumber\n      break\n    case 'boolean':\n      fn = OCBoolean\n      break\n    case 'object':\n      fn = OCObject\n      break\n  }\n  return fn\n}\n\nfunction zeroValue() {\n  return m('span.grey', '(no value)')\n}\n\nfunction OCBoolean (schema, val) {\n  return val === true ? 'Yes' : (val === false ? 'No' : zeroValue())\n}\n\nfunction OCString (schema, val, path, root) {\n  if (val === undefined || val === null) {\n    return zeroValue()\n  }\n  let cpath = path[path.length-1]\n  if (schema.media && schema.media.binaryEncoding == 'base64') {\n    return m('div', [\n      m('img', { src: 'data:image/svg+xml;base64,' + val, style: 'max-height: 100px;' }) \n    ])\n  }\n  let out = val\n  if (schema.format === 'url') {\n    out = m('a', { href: val, target: '_blank' }, val)\n  }\n  else if (schema.format === 'date') {\n    out = `${val} (${moment(val).fromNow()})`\n  }\n  else if (schema.format == 'webid') {\n    out = resolveWebId(val, path.slice(-1)[0])\n  }\n  if (cpath === 'contract_address') {\n    if (root.blockchain === 'ethereum') {\n      out = m('a', { href: `https://etherscan.io/address/${val}`, target: '_blank' }, val)\n    }\n  }\n  else if (cpath === 'market_id') {\n    let lnk = null\n    switch (root.platform) {\n      case 'ios':\n        lnk = `http://itunes.apple.com/gb/app/${val}`\n        break\n      case 'android':\n        lnk = `https://play.google.com/store/apps/details?id=${val}`\n        break\n    }\n    if (lnk) {\n      out = m('a', { href: lnk, target: '_blank' }, val)\n    }\n  }\n  return m('div', [\n    out,\n    m('.control', m('a', { href: githubIssueLink(path, val) }, m('i.fas.fa-bug')))\n  ])\n}\n\nfunction OCNumber (schema, val) {\n  return val || zeroValue()\n}\n\nfunction OCArray (schema, val, path, root) {\n  if (!val || val.length === 0) {\n    return zeroValue()\n  }\n  let fn = getType(schema.items.type)\n  return val.map((i, c) => {\n    return fn ? fn(schema.items, i, path.concat([c]), root) : null\n  })\n}\n\nfunction OCObject(schema, values, path, root=null) {\n  let wrapper = (out) => out\n  if (schema.patternProperties) {\n    if (values) {\n      schema.properties = []\n      Object.keys(values).forEach(k => {\n        schema.properties[k] = { type: 'string', format: schema['opencrypto-validation'] }\n      })\n    } else {\n      return zeroValue()\n    }\n  }\n  if (!schema.properties) {\n    return m('div', 'bad object')\n  }\n  if (schema.$id && path.length > 0) {\n    wrapper = (res) => {\n      const match = schema.$id.match(/\\/models\\/([^#]+)#?$/)\n      if (!match) {\n        return res\n      }\n      const schemas = {\n        ledger: projectSchema.properties.ledgers.items,\n        asset: projectSchema.properties.assets.items,\n        exchange: projectSchema.properties.exchanges.items,\n        client: projectSchema.properties.clients.items,\n        network: projectSchema.properties.ledgers.items.properties.networks.items,\n        market: projectSchema.properties.exchanges.items.properties.markets.items,\n      }\n      const subschemaId = match[1]\n      const expanded = state.expanded.indexOf(`${match[1]}:${values.id}`) !== -1\n      if (!schemas[subschemaId]) {\n        console.log('not exists: %s', subschemaId)\n      }\n      const [ progress, msgs ] = calculateProgress(schemas[subschemaId], values)\n\n      const content = m('.box.subitem', [\n        m('nav.level', [\n          m('.level-left', [\n            m('.level-item', m('a', { href: `/${subschemaId}/${values.pid || values.id}`, oncreate: m.route.link }, m('b', values.name))),\n            m('.level-item', `[${values.id}]`),\n          ]),\n          m('.level-right', [\n            m('.level-item', [\n              getCounts(values, subschemaId),\n            ]),\n            m('.level-item', { style: 'color: black; width: 10em;' }, [\n              m('span', { style: 'padding-right: 1em; font-size: 0.9em;' }, (progress*100).toFixed(0) + '%'),\n              m('progress.progress.is-primary.is-small', { value: progress, max: 1 }, `${progress}%`) \n            ]),\n            m('.level-item', m('a', { onclick: m.withAttr('value', expandSubschema), value: `${subschemaId}:${values.id}` }, expanded ? 'Collapse' : 'Expand'))\n          ])\n        ]),\n        expanded ? m('div', res) : null\n      ])\n      return content\n    }\n  }\n  return wrapper(m('table.table', m('tbody', Object.keys(schema.properties).map(p => {\n    if (hideEmpty && (values[p] === undefined || values[p] === null)) {\n      return null\n    }\n    const pdata = schema.properties[p]\n    let cpath = path.concat([p])\n    let fn = getType(pdata.type)\n    let events = { 'data-path': makeFooter(cpath, pdata), onmouseenter: m.withAttr('data-path', setPath), onmouseleave: m.withAttr('data-path', unsetPath) }\n    return m('tr', events, [\n      m('th', pdata.title || p),\n      m('td', fn ? fn(pdata, values ? values[p] : null, cpath, values) : 'unknown type: '+pdata.type)\n    ])\n  }))))\n}\n\nfunction githubLink(id, type = 'blob') {\n  return `https://github.com/opencrypto-io/data/${type}/master/db/projects/${id}/project.yaml`\n}\n\nconst Layout = {\n  oninit () {\n    const schemaUrl = window.location.hostname === 'localhost' \n      ? 'http://localhost:1234/schema/deref/project.json'\n      : 'https://schema.opencrypto.io/build/deref/project.json'\n    Promise.all([\n      ocdx.query('webids'),\n      m.request(schemaUrl)\n    ]).then(out => {\n      webIds = out[0]\n      projectSchema = out[1]\n      m.redraw()\n    })\n  },\n  view (vnode) {\n    return m('div', [\n      m('#toolsFooter', { style: { display: currentPath ? 'block' : 'none' }}, currentPath),\n      m('div', { 'style': 'padding-bottom: 5em;' },  [\n        m('nav#navbar.navbar', [\n          m('.container', [\n            m('.navbar-brand', [\n              m('a.navbar-item', { href: 'https://data.opencrypto.io/' }, [\n                m('#logo'),\n                m('#logo-text', [\n                  m('span.thin', 'Open'),\n                  'Crypto',\n                  m('span.green', 'Data'),\n                ])\n              ])\n            ]),\n            m('.navbar-menu', [\n              m('.navbar-start', [\n                m('a.navbar-item', { href: 'https://data.opencrypto.io' }, 'Homepage'), \n                m('a.navbar-item.current', { href: 'https://explorer.opencrypto.io' }, 'Explorer'), \n                m('a.navbar-item', { href: 'https://schema.opencrypto.io' }, 'Schema'), \n              ]),\n              m('.navbar-end', [\n                m('a.navbar-item', { href: '#' }, 'How to contribute?'), \n                m('a.navbar-item', { href: '#' }, 'FAQ'), \n              ])\n            ])\n          ])\n        ]),\n        m('.container', function() {\n          if (webIds && projectSchema) {\n            return m('#page', vnode.children)\n          }\n          return m('div', { style: 'padding: 2em;' }, 'Loading ..')\n        }())\n      ])\n    ])\n  }\n}\n\nvar originalData = null\nvar projectData = null\nvar data = null\nvar sortBy = 'name'\nvar sortReverse = false\nvar listModel = null\nvar listModelAttr = null\nvar modelData = null\nvar defaultList = 'projects'\n\nfunction loadListData (vnode) {\n  let model = modelData = _.find(models, { collection: vnode.attrs.type || defaultList })\n  if (!modelData) {\n    console.error('no model: %s', model)\n  }\n\n  listModel = model\n  listModelAttr = model.collection\n  ocdx.query(modelData.path).then(res => {\n    data = res.map(i => {\n      return processItem(i, model.id)\n    })\n    originalData = _.clone(data)\n    m.redraw()\n  })\n}\n\nconst ProjectList = {\n  oninit (vnode) {\n    loadListData(vnode)\n    if (projectData === null) {\n      ocdx.query('projects').then((pd) => {\n        projectData = _.clone(pd)\n        m.redraw()\n      })\n    }\n  },\n  onupdate (vnode) {\n    if (listModelAttr !== (vnode.attrs.type || defaultList)) {\n      loadListData(vnode)\n    }\n  },\n  view () {\n    if (data === null || projectData === null) {\n      return m('div', { style: 'padding: 2em;' }, 'Loading ..')\n    }\n\n    function runSort() {\n      data = _.sortBy(data, sortBy)\n      if (sortReverse) {\n        data = data.reverse()\n      }\n    }\n    function updateSort(value) {\n      if (sortBy != value) {\n        sortBy = value\n      } else {\n        sortReverse = !sortReverse\n      }\n      runSort()\n    }\n\n    function searchList(value) {\n      data = _.clone(originalData)\n      if (!value) {\n        return null\n      }\n      data = data.filter((p) => {\n        return Boolean(p.name.match(new RegExp(value, 'gmi')))\n      })\n    }\n\n    runSort()\n\n    return m('div', [\n      m('nav.level.pageNavBar', [\n        m('.level-left', [\n          m('.level-item', [\n            m('h2.title.is-4', `${modelData.plural} (${originalData.length})`),\n          ]),\n          m('.level-item', [\n            m('input.searchInput', { placeholder: `Search ${modelData.plural.toLowerCase()} ..`, oninput: m.withAttr('value', searchList) }),\n          ])\n        ]),\n        m('.level-right', [\n          m('.level-item', m('.buttons.has-addons', Object.keys(models).map((mid) => {\n            const model = models[mid]\n            var classAttr = null\n            if (modelData.id === model.id) {\n              classAttr = 'is-selected is-info'\n            }\n            return m('span.level-item.button', { \n              href: `/${model.collection}`,\n              oncreate: m.route.link,\n              class: (modelData.id === model.id) ? 'is-selected is-warning' : ''\n            }, model.plural)\n          })))\n        ])\n      ]),\n      m('#projectList', [\n        m('table.table', [\n          m('thead', [\n            m('tr', [\n              modelData.id !== 'project' ? m('th', 'Project') : null,\n              m('th', ''),\n              m('th', m('a', { onclick: m.withAttr('value', updateSort), value: 'name' }, 'Name')),\n              m('th', 'Includes'),\n              m('th', m('a', { onclick: m.withAttr('value', updateSort), value: '_progress' }, 'Completeness')),\n              m('th', m('a', { onclick: m.withAttr('value', updateSort), value: '_size' }, 'Data size')),\n              m('th', 'GitHub'),\n              m('th', 'Link to Explorer'),\n            ])\n          ]),\n          m('tbody', function () {\n            return data.map(i => {\n              const detailLink = `/${modelData.id}/${i.pid || i.id}`\n              return m('tr', { key: i.id }, [\n                modelData.id !== 'project' ? \n                  m('td', function () {\n                    if (!i.pid) {\n                      return m('span', 'n/a')\n                    }\n                    const pi = i.pid.split(':')[0]\n                    const par = _.find(projectData, { id: pi })\n                    return m('a', { href: '/project/'+pi, oncreate: m.route.link }, par.name)\n                  }())\n                  : null,\n                m('td.data-logo', m('div', [\n                  i._logo ? m('img', { src: 'data:image/svg+xml;base64,' + i._logo }) : '',\n                ])),\n                m('td', m('a.projectTitle', { href: detailLink, oncreate: m.route.link }, i.name)),\n                m('td', i._counts),\n                m('td', m('div', [\n                  m('progress.progress.is-primary.is-small', { value: i._progress, max: 1 }, `${i._progress}%`) \n                ])),\n                m('td', (i._size/1000).toFixed(2) + ' KB'),\n                m('td', [\n                  m('a', { href: githubLink(i.id) }, 'Source'),\n                  ', ',\n                  m('a', { href: githubLink(i.id, 'edit') }, 'Edit'),\n                ]),\n                m('td', m('a', { href: detailLink, oncreate: m.route.link }, 'View →' )),\n              ])\n            })\n          }())\n        ])\n      ])\n    ])\n  }\n}\n\nvar dataItem = null\nvar dataView = 'explorer'\nvar dataObject = null\nvar detailId = null\n\nfunction loadItem (vnode) {\n  state.expanded = []\n  const type = vnode.attrs.type\n  let id = vnode.attrs.id \n  if (vnode.attrs.subid) {\n    id = [ id, vnode.attrs.subid ].join(':')\n  }\n  ocdx.get(type, id).then(res => {\n    dataItem = processItem(res, type)\n    detailId = [ vnode.attrs.type, vnode.attrs.id, vnode.attrs.subid ].join('-')  \n    m.redraw()\n  })\n}\n\nconst Project = {\n  oninit (vnode) {\n    loadItem(vnode)\n  },\n  onupdate (vnode) {\n    const id = [ vnode.attrs.type, vnode.attrs.id, vnode.attrs.subid ].join('-') \n    if (detailId !== id) {\n      loadItem(vnode)\n    }\n  },\n  view (vnode) {\n    if (!dataItem) {\n      return m('div', { style: 'padding: 2em;' }, 'Loading ..')\n    }\n    function switchSource (type) {\n      dataView = type\n    }\n    const p = dataItem\n    const model = models[vnode.attrs.type]\n\n    if (!model) {\n      console.log('Model not found: %s', vnode.attrs.type)\n      return null\n    }\n    \n    if (!model.pathx) {\n      model.pathx = ['project']\n    }\n\n    return m('div', [\n      m('nav.level.pageNavBar', [\n        m('.level-left', [\n          m('.level-item', [\n            m('h2.title.is-4', model.pathx.map((mid, i) => {\n              const mod = models[mid]\n              return [ \n                (i > 0) ? m('span', ' → ') : null,\n                '[',\n                m('a', { href: `/${mod.collection}`, oncreate: m.route.link }, mod.id),\n                '] ',\n                m('a', { href: `/${mod.id}/${(mod.pathx && p.pid) ? p.pid.split(':').slice(0,i+1).join(':') : p.id}`, oncreate: m.route.link }, (model.pathx.length > 1) ? (p.pid ? p.pid.split(':')[i] : p.id) : p.id)\n              ]\n            }))\n          ])\n        ])\n      ]),\n      m('#itemDetail', [\n        m('.level', [\n          m('.level-left', [\n            p._logo_full ? m('.navbar-item', m('.itemLogo', m('img', { src: 'data:image/svg+xml;base64,' + p._logo_full }))) : '',\n            m('.navbar-item', m('h3.title.is-4', p.name))\n          ]),\n          m('.level-right', [\n            m('.level-item', p._counts),\n            m('a.level-item', { href: githubLink(p.id, 'edit') }, [\n              m('i.fab.fa-github', { style: 'font-size: 1.3em; padding-right: 0.3em;' }),\n              'Edit on GitHub'\n            ]),\n            m('.level-item', [\n              m('.buttons.has-addons', [\n                m('span.button', { class: dataView === 'explorer' ? 'is-success is-selected' : '', onclick: m.withAttr('value', switchSource), value: 'explorer' }, 'Explorer'),\n                m('span.button', { class: dataView === 'source' ? 'is-success is-selected' : '', onclick: m.withAttr('value', switchSource), value: 'source' }, 'Source'),\n              ])\n            ])\n          ])\n        ]),\n        function () {\n          if (dataView === 'source') {\n            const src = JSON.stringify(p, null, 2)\n            return m('#itemSource', [\n              m('pre', m.trust(hljs.highlight('json', src).value))\n            ])\n          }\n          if (projectSchema === null) {\n            return m('div', { style: 'padding: 2em;' }, 'Loading ..')\n          }\n          const schema = model.schemapath ? jmespath.search(projectSchema, model.schemapath) : projectSchema\n          dataObject = OCObject(schema, dataItem, [])\n          return m('#dataTable', dataObject)\n        }()\n      ]),\n    ])\n  }\n}\n\nconst root = document.getElementById('data-explorer')\nm.route(root, '/', {\n  '/': { render: () => m(Layout, m(ProjectList)) },\n  '/:type': { render: (vnode) => m(Layout, m(ProjectList, vnode.attrs)) },\n  '/:type/:id': { render: (vnode) => m(Layout, m(Project, vnode.attrs)) }\n})\n"]}